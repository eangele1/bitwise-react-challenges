{"ast":null,"code":"export async function getMoviesBySearchTerm(input) {\n  //API Key\n  const apiKey = 'bcd042f5'; //API URL\n\n  const URL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${input}`; //checks to see if fetch works out, otherwise return an error\n\n  try {\n    const response = await fetch(URL);\n    const jsonData = await response.json();\n    /*\n    * main requirement is fulfilled, extra code below is optional\n    * for displaying data properly in a UI \n    */\n\n    console.log(jsonData);\n    let arr = [];\n\n    if (jsonData.Search.length != null) {\n      for (var i = 0; i < jsonData.Search.length; i++) {\n        arr.push(jsonData.Search[i].Title);\n      }\n    }\n\n    document.getElementById(\"output\").innerHTML = arr.join('<br>');\n  } catch (e) {\n    document.getElementById(\"output\").innerHTML = \"Error\";\n    console.log(e);\n  }\n}\nexport async function getMovieDetailsById(input) {\n  //API Key\n  const apiKey = 'bcd042f5'; //API URL\n\n  const URL = `http://www.omdbapi.com/?apikey=${apiKey}&i=${input}`; //checks to see if fetch works out, otherwise return an error\n\n  try {\n    const response = await fetch(URL);\n    const jsonData = await response.json();\n    /*\n    * main requirement is fulfilled, extra code below is optional\n    * for displaying data properly in a UI \n    */\n\n    console.log(jsonData);\n    const propertyKeys = Object.keys(jsonData);\n    const propertyValues = Object.values(jsonData);\n    let arr = [];\n\n    if (propertyKeys.length != null) {\n      for (var i = 0; i < propertyKeys.length; i++) {\n        arr.push(propertyKeys[i] + \": \" + propertyValues[i]);\n      }\n    }\n\n    document.getElementById(\"output\").innerHTML = arr.join('<br>');\n  } catch (e) {\n    document.getElementById(\"output\").innerHTML = \"Error\";\n    console.log(e);\n  }\n}","map":{"version":3,"sources":["/Users/halftbhd/Desktop/in-class-challenge_8-10-21/src/utils.js"],"names":["getMoviesBySearchTerm","input","apiKey","URL","response","fetch","jsonData","json","console","log","arr","Search","length","i","push","Title","document","getElementById","innerHTML","join","e","getMovieDetailsById","propertyKeys","Object","keys","propertyValues","values"],"mappings":"AAAA,OAAO,eAAeA,qBAAf,CAAqCC,KAArC,EAA4C;AACjD;AACA,QAAMC,MAAM,GAAG,UAAf,CAFiD,CAGjD;;AACA,QAAMC,GAAG,GAAI,kCAAiCD,MAAO,MAAKD,KAAM,EAAhE,CAJiD,CAMjD;;AACA,MAAI;AAEF,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA;AACJ;AACA;AACA;;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAII,GAAG,GAAG,EAAV;;AAEA,QAAGJ,QAAQ,CAACK,MAAT,CAAgBC,MAAhB,IAA0B,IAA7B,EAAkC;AAChC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACK,MAAT,CAAgBC,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC/CH,QAAAA,GAAG,CAACI,IAAJ,CAASR,QAAQ,CAACK,MAAT,CAAgBE,CAAhB,EAAmBE,KAA5B;AACD;AACF;;AAEDC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CR,GAAG,CAACS,IAAJ,CAAS,MAAT,CAA9C;AAED,GArBD,CAqBE,OAAMC,CAAN,EAAQ;AACRJ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,OAA9C;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACD;AAEF;AAED,OAAO,eAAeC,mBAAf,CAAmCpB,KAAnC,EAA0C;AAC/C;AACA,QAAMC,MAAM,GAAG,UAAf,CAF+C,CAG/C;;AACA,QAAMC,GAAG,GAAI,kCAAiCD,MAAO,MAAKD,KAAM,EAAhE,CAJ+C,CAM/C;;AACA,MAAI;AAEF,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA;AACJ;AACA;AACA;;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,UAAMgB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYlB,QAAZ,CAArB;AACA,UAAMmB,cAAc,GAAGF,MAAM,CAACG,MAAP,CAAcpB,QAAd,CAAvB;AAEA,QAAII,GAAG,GAAG,EAAV;;AAEA,QAAGY,YAAY,CAACV,MAAb,IAAuB,IAA1B,EAA+B;AAC7B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,YAAY,CAACV,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;AAC5CH,QAAAA,GAAG,CAACI,IAAJ,CAASQ,YAAY,CAACT,CAAD,CAAZ,GAAkB,IAAlB,GAAyBY,cAAc,CAACZ,CAAD,CAAhD;AACD;AACF;;AAEDG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CR,GAAG,CAACS,IAAJ,CAAS,MAAT,CAA9C;AAED,GAxBD,CAwBE,OAAMC,CAAN,EAAQ;AACRJ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,OAA9C;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACD;AAEF","sourcesContent":["export async function getMoviesBySearchTerm(input) {\n  //API Key\n  const apiKey = 'bcd042f5'\n  //API URL\n  const URL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${input}`;\n\n  //checks to see if fetch works out, otherwise return an error\n  try {\n\n    const response = await fetch(URL);\n    const jsonData = await response.json();\n\n    /*\n    * main requirement is fulfilled, extra code below is optional\n    * for displaying data properly in a UI \n    */\n    console.log(jsonData);\n\n    let arr = [];\n\n    if(jsonData.Search.length != null){\n      for (var i = 0; i < jsonData.Search.length; i++) {\n        arr.push(jsonData.Search[i].Title);\n      }\n    }\n\n    document.getElementById(\"output\").innerHTML = arr.join('<br>');\n\n  } catch(e){\n    document.getElementById(\"output\").innerHTML = \"Error\";\n    console.log(e);\n  }\n\n}\n\nexport async function getMovieDetailsById(input) {\n  //API Key\n  const apiKey = 'bcd042f5'\n  //API URL\n  const URL = `http://www.omdbapi.com/?apikey=${apiKey}&i=${input}`;\n\n  //checks to see if fetch works out, otherwise return an error\n  try {\n\n    const response = await fetch(URL);\n    const jsonData = await response.json();\n\n    /*\n    * main requirement is fulfilled, extra code below is optional\n    * for displaying data properly in a UI \n    */\n    console.log(jsonData);\n\n    const propertyKeys = Object.keys(jsonData);\n    const propertyValues = Object.values(jsonData);\n\n    let arr = [];\n\n    if(propertyKeys.length != null){\n      for (var i = 0; i < propertyKeys.length; i++) {\n        arr.push(propertyKeys[i] + \": \" + propertyValues[i]);\n      }\n    }\n\n    document.getElementById(\"output\").innerHTML = arr.join('<br>');\n\n  } catch(e){\n    document.getElementById(\"output\").innerHTML = \"Error\";\n    console.log(e);\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}