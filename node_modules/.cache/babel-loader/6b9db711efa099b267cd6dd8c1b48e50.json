{"ast":null,"code":"var _jsxFileName = \"/Users/halftbhd/Documents/GitHub/bitwise-react-challenges/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as utilities from './utils.js';\nimport React, { useState } from 'react';\nimport MovieCard from './MovieCard.js';\nimport MovieDetails from './MovieDetails.js';\nimport Spinner from './Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // takes and stores user input using React Hooks\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [IDSearchTerm, setIDSearchTerm] = useState(\"\"); // stores a loading state for UI to display\n\n  const [isLoading, setLoadState] = useState(false); // TODO: stores type of error outputted by the API\n  //const [error, setError] = useState(null);\n  // stores user interface output\n\n  const [UIOutput, setUIOutput] = useState(null);\n\n  async function searchSubmit(input, choice) {\n    setUIOutput(null);\n    setLoadState(true);\n\n    if (input === \"\") {\n      setLoadState(false);\n      return;\n    }\n\n    var obj = null;\n\n    switch (choice) {\n      case 0:\n        obj = await utilities.getMoviesBySearchTerm(input);\n        break;\n\n      case 1:\n        obj = await utilities.getMovieDetailsById(input);\n        break;\n\n      default:\n        break;\n    } // extracts keys from json object and converts into array\n\n\n    const propertyKeys = Object.keys(obj);\n\n    if (propertyKeys.includes(\"Error\")) {\n      setUIOutput( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", obj.Error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this));\n      setLoadState(false);\n      return;\n    }\n\n    if (choice === 0) {\n      // initializes array that will contain our UI components to render to the screen\n      let outputArr = [];\n\n      for (const i in obj.Search) {\n        outputArr.push( /*#__PURE__*/_jsxDEV(MovieCard, {\n          value: obj.Search[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this));\n      }\n\n      setUIOutput(outputArr);\n    }\n\n    if (choice === 1) setUIOutput( /*#__PURE__*/_jsxDEV(MovieDetails, {\n      value: obj\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, this));\n    setLoadState(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 150,\n          paddingBottom: 20\n        },\n        src: \"https://www.nicepng.com/png/full/363-3636365_movie-camera-clipart-png-film-camera-vector-png.png\",\n        alt: \"W3Schools.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0\n        },\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search by Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        onChange: e => setSearchTerm(String(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => searchSubmit(searchTerm, 0),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search by IMDb ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        onChange: e => setIDSearchTerm(String(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => searchSubmit(IDSearchTerm, 1),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u2013Output\\u2013\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        LoadState: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"output\",\n        children: UIOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Piu3WVYmRJOqTQmOgNI8OlWAifM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/halftbhd/Documents/GitHub/bitwise-react-challenges/src/App.js"],"names":["utilities","React","useState","MovieCard","MovieDetails","Spinner","App","searchTerm","setSearchTerm","IDSearchTerm","setIDSearchTerm","isLoading","setLoadState","UIOutput","setUIOutput","searchSubmit","input","choice","obj","getMoviesBySearchTerm","getMovieDetailsById","propertyKeys","Object","keys","includes","Error","outputArr","i","Search","push","width","paddingBottom","margin","e","String","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as utilities from './utils.js'\nimport React, { useState } from 'react';\nimport MovieCard from './MovieCard.js';\nimport MovieDetails from './MovieDetails.js'\nimport Spinner from './Spinner.js';\n\nfunction App() {\n  // takes and stores user input using React Hooks\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [IDSearchTerm, setIDSearchTerm] = useState(\"\");\n\n  // stores a loading state for UI to display\n  const [isLoading, setLoadState] = useState(false);\n\n  // TODO: stores type of error outputted by the API\n  //const [error, setError] = useState(null);\n\n  // stores user interface output\n  const [UIOutput, setUIOutput] = useState(null);\n\n  async function searchSubmit(input, choice){\n    setUIOutput(null);\n    setLoadState(true);\n\n    if (input === \"\"){\n      setLoadState(false);\n      return;\n    }\n\n    var obj = null;\n    \n    switch(choice){\n      case 0:\n      obj = await utilities.getMoviesBySearchTerm(input);\n        break;\n      case 1:\n      obj = await utilities.getMovieDetailsById(input);\n        break;\n      default:\n        break;\n    }\n\n    // extracts keys from json object and converts into array\n    const propertyKeys = Object.keys(obj);\n\n    if(propertyKeys.includes(\"Error\")){\n      setUIOutput(<p>Error: {obj.Error}</p>);\n      setLoadState(false);\n      return;\n    }\n\n    if(choice === 0){\n      // initializes array that will contain our UI components to render to the screen\n      let outputArr = [];\n      for (const i in obj.Search) {\n        outputArr.push(<MovieCard key={i} value={obj.Search[i]} />);\n      }\n      setUIOutput(outputArr);\n    }\n\n    if (choice === 1) setUIOutput(<MovieDetails key={0} value={obj} />);\n\n    setLoadState(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* App Logo */}\n        <img style={{ width: 150, paddingBottom: 20 }} src=\"https://www.nicepng.com/png/full/363-3636365_movie-camera-clipart-png-film-camera-vector-png.png\" alt=\"W3Schools.com\" />\n        \n        {/* App Name */}\n        <h1 style={{margin: 0}}>\n          Movie Search\n        </h1>\n        <br/>\n\n        {/* First user input; searches movies by title */}\n        <label>Search by Title:</label>\n        <br/>\n        <input type=\"text\" placeholder=\"Title\" onChange={e => setSearchTerm(String(e.target.value))} />\n        <button onClick={() => searchSubmit(searchTerm, 0)}>Submit</button>\n        <br/>\n        <br/>\n\n        {/* Second user input; searches specific movie by IMDb ID */}\n        <label>Search by IMDb ID:</label>\n        <br/>\n        <input type=\"text\" placeholder=\"ID\" onChange={e => setIDSearchTerm(String(e.target.value))} />\n        <button onClick={() => searchSubmit(IDSearchTerm, 1)}>Submit</button>\n        <br/>\n        <br/>\n\n        {/* Displays whatever state the app is in and what data is returned */}\n        <label>–Output–</label>\n        <br/>\n        <Spinner LoadState={isLoading} />\n        <div id=\"output\">{UIOutput}</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}